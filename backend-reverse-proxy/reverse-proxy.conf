server {
    underscores_in_headers on;
    
    listen 80;
    listen [::]:80;
    server_name reverse_proxy reverse-proxy;


    #################################
    # Endpoints that do not need auth
    #################################

    location /user/create {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_set_header Host $host;
        proxy_pass http://user-service:8000;
    }

    location /login {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_set_header Host $host;
        proxy_pass http://user-service:8000;
    }

    location /validate {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_set_header Host $host;
        proxy_pass http://user-service:8000;
    }

    #################################
    # Socket io
    #################################

    # Socket io
    location /matching-service/ {
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username;

        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        default_type application/json;

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_pass http://socketio-matching-service:5200;  

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";         
    }

    location /chat-service/ {
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username; 

        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        default_type application/json;

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_pass http://socketio-chat-service:5300;  

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";         
    }

    location /collab-service/ {
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username; 

        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        default_type application/json;

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_pass http://socketio-collab-service:5400;  

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";         
    }

    #################################
    # Endpoints that requires auth
    #################################

    location = /logout {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;           

        proxy_set_header Host $host;
        proxy_pass http://user-service:8000/logout;     
    }

    location /user {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username; 

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        # User service

        location = /user/delete {
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_set_header Host $host;
            proxy_pass http://user-service:8000;           
        }

        location = /user/changepwd {
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_set_header Host $host;
            proxy_pass http://user-service:8000;           
        }

        # Matching service

        location ~ /user/[A-Za-z|\|]+ {
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_set_header Host $host;
            proxy_pass http://matching-service:7001;              
        }

        location ~ /user/[A-Za-z]+ {
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_set_header Host $host;
            proxy_pass http://matching-service:7001;              
        }
    }

    location /match {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        auth_request     /auth;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username;

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        proxy_set_header Host $host;
        proxy_pass http://matching-service:7001;              
    }

    # Question service
    location /question {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username;

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        proxy_set_header Host $host;
        proxy_pass http://question-service:17001;
    }

    location /answer {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $matchid $upstream_http_x_matchid; 
        auth_request_set $username $upstream_http_x_username;

        proxy_set_header X-MatchId $matchid;
        proxy_set_header X-Username $username;

        proxy_set_header Host $host;
        proxy_pass http://question-service:17001;        
    }

    #################################
    # Auth service endpoint
    #################################

    location = /auth {
        internal;

        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

        proxy_pass              http://auth-service:13704/auth;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        if ($request_method = OPTIONS) {
            return 200;
        }
    }

    #################################
    # Error page formatting
    #################################

    error_page 401 =401 @401_json;

    location @401_json {
        internal;
        default_type application/json;
        return 401 '{"error":"Unauthorized"}';
    }

    error_page 500 =400 @400_json;
    location @400_json {
        internal;
        default_type application/json;
        return 401 '{"error":"Fail to handle request"}';
    }
}
