services:
  # Persistence
  user-cache:
    image: "redis:7.0.4-alpine"
    ports: 
      - "6380:6379"
  match-cache:
    image: "redis:7.0.4-alpine"
    ports: 
      - "6381:6379"

  # Kafka
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092, PLAINTEXT_HOST://kafka:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092, PLAINTEXT_HOST://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: 30s
      timeout: 5s
      retries: 3

  # REST services
  matching-service:
    build: 
      dockerfile: ./backend-matching-service/matching-service/Dockerfile
      context: ./
    ports:
      - "7001:7001"
    environment:
      - USER_REDIS_URL=user-cache:6379
      - MATCH_REDIS_URL=match-cache:6379
      - KAFKA_URL=kafka:29092
      - POSTGRES_URL=postgres://postgres:123@postgres:5432/dev
    depends_on:
      kafka:
        condition: service_healthy
  
  # Socket io
  socketio:
    build: ./backend-socketio
    ports:
      - "5200:5200"
    environment:
      - URI_USER_SVC=http://matching-service:7001

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
